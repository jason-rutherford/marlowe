---
AllCops:
  Exclude:
    - 'bin/**/*'
    - 'config/**/*'
    - 'script/**/*'
    - 'tmp/**/*'
    - '*.gemspec'
    - 'gemfiles/*.gemfile'
  DisplayCopNames: true
  DisplayStyleGuide: true
  ExtraDetails: true
  TargetRubyVersion: 2.3

# { Lint cops

Lint/UnusedMethodArgument:
  Exclude: []

# } Lint cops

# { Metrics cops
# These are mostly disabled because they should be advisory, not build
# failures.

Metrics/AbcSize:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/LineLength:
  Max: 90
  Exclude:
    - test/**/*
    - db/migrate/**/*
    - Gemfile

Metrics/MethodLength:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false
# } Metrics cops

# { Performance cops
# Performance/FixedSize:
#   Enabled: false
# } Performance cops

# { Style cops
Layout/AlignHash:
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key

Layout/AlignParameters:
  EnforcedStyle: with_fixed_indentation

Style/AndOr:
  EnforcedStyle: conditionals

Style/AsciiComments:
  Enabled: false

Style/BarePercentLiterals:
  EnforcedStyle: percent_q

# Don't allow by default, but permit on a file-by-file basis by exclusion.
Style/BlockComments:
  Exclude: []

Style/BlockDelimiters:
  EnforcedStyle: semantic
  ProceduralMethods:
    - assert_raises
    - spec
    - tap
  FunctionalMethods:
    - reject!
    - delete_if
    - let

Style/BracesAroundHashParameters:
  EnforcedStyle: context_dependent

# This is purely a readability issue.
Style/ClassAndModuleChildren:
  Enabled: false

# I prefer #kind_of? to #is_a?
Style/ClassCheck:
  EnforcedStyle: kind_of?

Style/CommandLiteral:
  EnforcedStyle: percent_x

# Many of the support modules follow Seattle style because minitest.
Style/DefWithParentheses:
  Exclude:
    - 'test/support/**/*'

Style/Documentation:
  Exclude:
    - '**/Rakefile'
    - 'app/**/*'
    - 'test/**/*'

Layout/DotPosition:
  EnforcedStyle: trailing

Style/DoubleNegation:
  Enabled: false

# Don't enable by default, but permit on a file-by-file basis by exclusion.
Style/EmptyElse:
  EnforcedStyle: empty

# Don't allow by default, but permit on a file-by-file basis by exclusion.
Naming/FileName:
  Exclude:
    - Appraisals
    - Gemfile
    - Rakefile # WTF? This should be excluded by default.
    - .simplecov-prelude.rb

# I prefer `str % args`; the style guide suggests `str.format(args)`.
Style/FormatString:
  Enabled: false

Style/GlobalVars:
  AllowedVariables: []

Style/SpecialGlobalVars:
  Enabled: false

# I prefer `->(){}` to `lambda{||}`
Style/Lambda:
  Enabled: false

# Allow any of callable.call(), callable.(), or callable[].
Style/LambdaCall:
  Enabled: false

# Many of the support modules follow Seattle style because minitest.
Style/MethodDefParentheses:
  Exclude:
    - 'test/support/**/*'
    - 'test/minitest_config.rb'

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

Style/RegexpLiteral:
  EnforcedStyle: mixed

Style/SignalException:
  EnforcedStyle: semantic

Style/SymbolArray:
  Enabled: true

Naming/MethodName:
  Exclude: []

# Parallel assignment is correct.
Style/ParallelAssignment:
  Enabled: false

# { 20160419 Trying some cops that are disabled by default.

# Favour File.open { ... } over f = File.open; f.close
Style/AutoResourceCleanup:
  Enabled: true

# Prefer map over collect, etc.
Style/CollectionMethods:
  Enabled: true

# If an array is a multi-line array, it should start that way, too.
Layout/FirstArrayElementLineBreak:
  Enabled: true

# If a hash is a multi-line hash, it should start that way, too.
Layout/FirstHashElementLineBreak:
  Enabled: true

# If a method call is broken over multiple lines, it should start that way, too.
Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Style/StringMethods:
  Enabled: true
# } 20160419 Trying some cops that are disabled by default.
# } Style cops
